{"ast":null,"code":"import { userAPI } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 21,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: true\n            };\n          }\n          return u;\n        })\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {\n              ...u,\n              followed: false\n            };\n          }\n          return u;\n        })\n      };\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: action.count\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return {\n          ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsersThunk = dispatch => {\n  toggleIsFetching(true);\n  userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n    this.props.toggleIsFetching(false);\n    this.props.setUsers(data.items);\n    this.props.setTotalUsersCount(data.totalCount);\n  });\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","filter","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunk","dispatch","getUsers","props","then","data","items","totalCount"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/users-reducer.js"],"sourcesContent":["import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 21,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const getUsersThunk = (dispatch) => {\r\n    toggleIsFetching(true)\r\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(data.items)\r\n        this.props.setTotalUsersCount(data.totalCount)\r\n    })\r\n}\r\n\r\nexport default usersReducer;"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAElC,MAAMC,MAAM,GAAG,QAAQ;AACvB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,SAAS,GAAG,WAAW;AAC7B,MAAMC,gBAAgB,GAAG,kBAAkB;AAC3C,MAAMC,qBAAqB,GAAG,uBAAuB;AACrD,MAAMC,kBAAkB,GAAG,oBAAoB;AAC/C,MAAMC,4BAA4B,GAAG,8BAA8B;AAEnE,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,EAAG;EACVC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,EAAE;EACnBC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,KAAK;EACjBC,mBAAmB,EAAE;AACzB,CAAC;AAED,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGR,YAAY;EAAA,IAAES,MAAM;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKjB,MAAM;MACP,OAAQ;QACJ,GAAGe,KAAK;QACRP,KAAK,EAAEO,KAAK,CAACP,KAAK,CAACU,GAAG,CAACC,CAAC,IAAI;UACxB,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,MAAM,EAAE;YACxB,OAAO;cAAC,GAAGF,CAAC;cAAEG,QAAQ,EAAE;YAAI,CAAC;UACjC;UACA,OAAOH,CAAC;QACZ,CAAC;MACL,CAAC;IACL,KAAKlB,QAAQ;MACT,OAAQ;QACJ,GAAGc,KAAK;QACRP,KAAK,EAAEO,KAAK,CAACP,KAAK,CAACU,GAAG,CAACC,CAAC,IAAI;UACxB,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,MAAM,EAAE;YACxB,OAAO;cAAC,GAAGF,CAAC;cAAEG,QAAQ,EAAE;YAAK,CAAC;UAClC;UACA,OAAOH,CAAC;QACZ,CAAC;MACL,CAAC;IACL,KAAKjB,SAAS;MAAE;QACZ,OAAO;UAAE,GAAGa,KAAK;UAAEP,KAAK,EAAEQ,MAAM,CAACR;QAAK,CAAC;MAC3C;IACA,KAAKL,gBAAgB;MAAE;QACnB,OAAO;UAAC,GAAGY,KAAK;UAAEJ,WAAW,EAAEK,MAAM,CAACL;QAAW,CAAC;MACtD;IACA,KAAKP,qBAAqB;MAAE;QACxB,OAAO;UAAC,GAAGW,KAAK;UAAEL,eAAe,EAAEM,MAAM,CAACO;QAAK,CAAC;MACpD;IACA,KAAKlB,kBAAkB;MAAE;QACrB,OAAO;UAAC,GAAGU,KAAK;UAAEH,UAAU,EAAEI,MAAM,CAACJ;QAAU,CAAC;MACpD;IACA,KAAKN,4BAA4B;MAAE;QAC/B,OAAO;UACH,GAAGS,KAAK;UACRF,mBAAmB,EAAEG,MAAM,CAACJ,UAAU,GAChC,CAAC,GAAGG,KAAK,CAACF,mBAAmB,EAAEG,MAAM,CAACK,MAAM,CAAC,GAC7CN,KAAK,CAACF,mBAAmB,CAACW,MAAM,CAACJ,EAAE,IAAIA,EAAE,KAAKJ,MAAM,CAACK,MAAM;QACrE,CAAC;MACL;IACA;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMU,MAAM,GAAIJ,MAAM,KAAM;EAACJ,IAAI,EAAEjB,MAAM;EAAEqB;AAAM,CAAC,CAAC;AAC1D,OAAO,MAAMK,QAAQ,GAAIL,MAAM,KAAM;EAACJ,IAAI,EAAEhB,QAAQ;EAAEoB;AAAM,CAAC,CAAC;AAC9D,OAAO,MAAMM,QAAQ,GAAInB,KAAK,KAAM;EAACS,IAAI,EAAEf,SAAS;EAAEM;AAAK,CAAC,CAAC;AAC7D,OAAO,MAAMoB,cAAc,GAAIjB,WAAW,KAAM;EAACM,IAAI,EAAEd,gBAAgB;EAAEQ;AAAW,CAAC,CAAC;AACtF,OAAO,MAAMkB,kBAAkB,GAAIN,KAAK,KAAM;EAACN,IAAI,EAAEb,qBAAqB;EAAEmB;AAAK,CAAC,CAAC;AACnF,OAAO,MAAMO,gBAAgB,GAAIlB,UAAU,KAAM;EAACK,IAAI,EAAEZ,kBAAkB;EAAEO;AAAU,CAAC,CAAC;AACxF,OAAO,MAAMmB,uBAAuB,GAAG,CAACnB,UAAU,EAAES,MAAM,MAAM;EAACJ,IAAI,EAAEX,4BAA4B;EAAEM,UAAU;EAAES;AAAM,CAAC,CAAC;AAEzH,OAAO,MAAMW,aAAa,GAAIC,QAAQ,IAAK;EACvCH,gBAAgB,CAAC,IAAI,CAAC;EACtB/B,OAAO,CAACmC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAACxB,WAAW,EAAE,IAAI,CAACwB,KAAK,CAAC1B,QAAQ,CAAC,CAAC2B,IAAI,CAACC,IAAI,IAAI;IACvE,IAAI,CAACF,KAAK,CAACL,gBAAgB,CAAC,KAAK,CAAC;IAClC,IAAI,CAACK,KAAK,CAACR,QAAQ,CAACU,IAAI,CAACC,KAAK,CAAC;IAC/B,IAAI,CAACH,KAAK,CAACN,kBAAkB,CAACQ,IAAI,CAACE,UAAU,CAAC;EAClD,CAAC,CAAC;AACN,CAAC;AAED,eAAezB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}