{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = userId => dispatch => {\n  authAPI.me().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = data.data;\n      dispatch(setAuthUserData(id, email, login));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","me","then","resultCode","id","password","rememberMe","response"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/auth-reducer.js"],"sourcesContent":["import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return  {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}})\r\nexport const getAuthUserData = (userId) => (dispatch) =>{\r\n    authAPI.me()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n        })\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) =>{\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAElC,MAAMC,aAAa,GAAG,eAAe;AAErC,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,aAAa;MACd,OAAQ;QACJ,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE,IAAI;QACdL,MAAM,EAAE;MACZ,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,MAAM;EAACK,IAAI,EAAET,aAAa;EAAEU,IAAI,EAAE;IAACR,MAAM;IAAEC,KAAK;IAAEC;EAAK;AAAC,CAAC,CAAC;AAC9G,OAAO,MAAMQ,eAAe,GAAIV,MAAM,IAAMW,QAAQ,IAAI;EACpDd,OAAO,CAACe,EAAE,EAAE,CACPC,IAAI,CAACL,IAAI,IAAI;IACV,IAAIA,IAAI,CAACM,UAAU,KAAK,CAAC,EAAE;MACvB,IAAI;QAACC,EAAE;QAAEb,KAAK;QAAED;MAAK,CAAC,GAAGO,IAAI,CAACA,IAAI;MAClCG,QAAQ,CAACF,eAAe,CAACM,EAAE,EAAEd,KAAK,EAAEC,KAAK,CAAC,CAAC;IAC/C;EACJ,CAAC,CAAC;AACV,CAAC;AACD,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAK,EAAEe,QAAQ,EAAEC,UAAU,KAAMN,QAAQ,IAAI;EAC/Dd,OAAO,CAACK,KAAK,CAACD,KAAK,EAAEe,QAAQ,EAAEC,UAAU,CAAC,CACrCJ,IAAI,CAACK,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACV,IAAI,CAACM,UAAU,KAAK,CAAC,EAAE;MAChCH,QAAQ,CAACD,eAAe,EAAE,CAAC;IAC/B;EACJ,CAAC,CAAC;AACV,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}