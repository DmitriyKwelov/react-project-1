{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        massage: 'Hi, how are you?',\n        likeCount: 0\n      }, {\n        id: 2,\n        massage: 'It\\'s my first post!',\n        likeCount: 24\n      }],\n      NewPostText: 'Лох'\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrey'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Victor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      messages: [{\n        id: 1,\n        massage: 'Hi'\n      }, {\n        id: 2,\n        massage: 'How are u'\n      }, {\n        id: 3,\n        massage: 'Yo'\n      }, {\n        id: 4,\n        massage: 'Yo'\n      }, {\n        id: 5,\n        massage: 'You'\n      }, {\n        id: 6,\n        massage: 'yp'\n      }]\n    },\n    sitebar: {}\n  },\n  _callSubscriber() {\n    console.log('State change');\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observe) {\n    this._callSubscriber = observe;\n  },\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        massage: this._state.profilePage.NewPostText,\n        likeCount: 0\n      };\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.NewPostText = '';\n      this._callSubscriber(this._state);\n    } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\n      this._state.profilePage.NewPostText = action.NewText;\n      this._callSubscriber(this._state);\n    }\n  }\n};\nexport const addPostActionCreate = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreate = text => {\n  return {\n    type: \"UPDATE-NEW-POST-TEXT\",\n    NewText: text\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"names":["ADD_POST","store","_state","profilePage","posts","id","massage","likeCount","NewPostText","messagesPage","dialogs","name","messages","sitebar","_callSubscriber","console","log","getState","subscribe","observe","dispatch","action","type","newPost","push","NewText","addPostActionCreate","updateNewPostTextActionCreate","text","window"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/state.js"],"sourcesContent":["const ADD_POST = 'ADD-POST';\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts:  [\r\n                {id: 1, massage: 'Hi, how are you?', likeCount: 0},\r\n                {id: 2, massage: 'It\\'s my first post!', likeCount: 24},\r\n            ],\r\n            NewPostText: 'Лох'\r\n        },\r\n        messagesPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrey'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Victor'},\r\n                {id: 6, name: 'Valera'}\r\n            ],\r\n            messages: [\r\n                {id: 1, massage: 'Hi'},\r\n                {id: 2, massage: 'How are u'},\r\n                {id: 3, massage: 'Yo'},\r\n                {id: 4, massage: 'Yo'},\r\n                {id: 5, massage: 'You'},\r\n                {id: 6, massage: 'yp'},\r\n            ],\r\n        },\r\n        sitebar: {\r\n\r\n        }\r\n    },\r\n    _callSubscriber () {\r\n        console.log('State change')\r\n    },\r\n\r\n    getState(){\r\n        return this._state\r\n    },\r\n    subscribe (observe) {\r\n        this._callSubscriber = observe;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 5,\r\n                massage: this._state.profilePage.NewPostText,\r\n                likeCount: 0,\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.NewPostText = '';\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\r\n            this._state.profilePage.NewPostText = action.NewText;\r\n            this._callSubscriber(this._state);\r\n        }\r\n    }\r\n}\r\nexport const addPostActionCreate = () => {\r\n    return {\r\n        type: ADD_POST,\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreate = (text) => {\r\n    return {\r\n        type: \"UPDATE-NEW-POST-TEXT\",\r\n        NewText: text,\r\n    }\r\n}\r\nexport default store;\r\nwindow.store = store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}