{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        massage: 'Hi, how are you?',\n        likeCount: 0\n      }, {\n        id: 2,\n        massage: 'It\\'s my first post!',\n        likeCount: 24\n      }],\n      NewPostText: 'Лох'\n    },\n    messagesPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrey'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Victor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      messages: [{\n        id: 1,\n        massage: 'Hi'\n      }, {\n        id: 2,\n        massage: 'How are u'\n      }, {\n        id: 3,\n        massage: 'Yo'\n      }, {\n        id: 4,\n        massage: 'Yo'\n      }, {\n        id: 5,\n        massage: 'You'\n      }, {\n        id: 6,\n        massage: 'yp'\n      }]\n    },\n    sitebar: {}\n  },\n  getState() {\n    return this._state;\n  },\n  rerenderEntireTree() {\n    console.log('State change');\n  },\n  addPost() {\n    let newPost = {\n      id: 5,\n      massage: state.profilePage.NewPostText,\n      likeCount: 0\n    };\n    state.profilePage.posts.push(newPost);\n    state.profilePage.NewPostText = '';\n    rerenderEntireTree(state);\n  },\n  updateNewPostText(text) {\n    state.profilePage.NewPostText = text;\n    rerenderEntireTree(state);\n  },\n  subscribe(observe) {\n    rerenderEntireTree = observe;\n  }\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"names":["store","_state","profilePage","posts","id","massage","likeCount","NewPostText","messagesPage","dialogs","name","messages","sitebar","getState","rerenderEntireTree","console","log","addPost","newPost","state","push","updateNewPostText","text","subscribe","observe","window"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/state.js"],"sourcesContent":["let store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts:  [\r\n                {id: 1, massage: 'Hi, how are you?', likeCount: 0},\r\n                {id: 2, massage: 'It\\'s my first post!', likeCount: 24},\r\n            ],\r\n            NewPostText: 'Лох'\r\n        },\r\n        messagesPage: {\r\n            dialogs: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrey'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Victor'},\r\n                {id: 6, name: 'Valera'}\r\n            ],\r\n            messages: [\r\n                {id: 1, massage: 'Hi'},\r\n                {id: 2, massage: 'How are u'},\r\n                {id: 3, massage: 'Yo'},\r\n                {id: 4, massage: 'Yo'},\r\n                {id: 5, massage: 'You'},\r\n                {id: 6, massage: 'yp'},\r\n            ],\r\n        },\r\n        sitebar: {\r\n\r\n        }\r\n    },\r\n    getState(){\r\n        return this._state\r\n    },\r\n    rerenderEntireTree () {\r\n        console.log('State change')\r\n    },\r\n    addPost () {\r\n        let newPost = {\r\n            id: 5,\r\n            massage: state.profilePage.NewPostText,\r\n            likeCount: 0,\r\n        };\r\n        state.profilePage.posts.push(newPost);\r\n        state.profilePage.NewPostText = '';\r\n        rerenderEntireTree(state);\r\n    },\r\n    updateNewPostText (text) {\r\n        state.profilePage.NewPostText = text;\r\n        rerenderEntireTree(state);\r\n    },\r\n    subscribe (observe) {\r\n        rerenderEntireTree = observe;\r\n    }\r\n}\r\n\r\nexport default store;\r\nwindow.store = store;"],"mappings":"AAAA,IAAIA,KAAK,GAAG;EACRC,MAAM,EAAE;IACJC,WAAW,EAAE;MACTC,KAAK,EAAG,CACJ;QAACC,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,SAAS,EAAE;MAAC,CAAC,EAClD;QAACF,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,SAAS,EAAE;MAAE,CAAC,CAC1D;MACDC,WAAW,EAAE;IACjB,CAAC;IACDC,YAAY,EAAE;MACVC,OAAO,EAAE,CACL;QAACL,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAQ,CAAC,EACvB;QAACN,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAQ,CAAC,EACvB;QAACN,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAO,CAAC,EACtB;QAACN,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAO,CAAC,EACtB;QAACN,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAQ,CAAC,EACvB;QAACN,EAAE,EAAE,CAAC;QAAEM,IAAI,EAAE;MAAQ,CAAC,CAC1B;MACDC,QAAQ,EAAE,CACN;QAACP,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC,EACtB;QAACD,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAW,CAAC,EAC7B;QAACD,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC,EACtB;QAACD,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC,EACtB;QAACD,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAK,CAAC,EACvB;QAACD,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAI,CAAC;IAE9B,CAAC;IACDO,OAAO,EAAE,CAET;EACJ,CAAC;EACDC,QAAQ,GAAE;IACN,OAAO,IAAI,CAACZ,MAAM;EACtB,CAAC;EACDa,kBAAkB,GAAI;IAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC/B,CAAC;EACDC,OAAO,GAAI;IACP,IAAIC,OAAO,GAAG;MACVd,EAAE,EAAE,CAAC;MACLC,OAAO,EAAEc,KAAK,CAACjB,WAAW,CAACK,WAAW;MACtCD,SAAS,EAAE;IACf,CAAC;IACDa,KAAK,CAACjB,WAAW,CAACC,KAAK,CAACiB,IAAI,CAACF,OAAO,CAAC;IACrCC,KAAK,CAACjB,WAAW,CAACK,WAAW,GAAG,EAAE;IAClCO,kBAAkB,CAACK,KAAK,CAAC;EAC7B,CAAC;EACDE,iBAAiB,CAAEC,IAAI,EAAE;IACrBH,KAAK,CAACjB,WAAW,CAACK,WAAW,GAAGe,IAAI;IACpCR,kBAAkB,CAACK,KAAK,CAAC;EAC7B,CAAC;EACDI,SAAS,CAAEC,OAAO,EAAE;IAChBV,kBAAkB,GAAGU,OAAO;EAChC;AACJ,CAAC;AAED,eAAexB,KAAK;AACpByB,MAAM,CAACzB,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}