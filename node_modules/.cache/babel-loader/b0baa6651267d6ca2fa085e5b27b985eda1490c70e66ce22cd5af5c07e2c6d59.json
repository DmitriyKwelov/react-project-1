{"ast":null,"code":"import { profileAPI, userAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    massage: 'Hi, how are you?',\n    likeCount: 0\n  }, {\n    id: 2,\n    massage: 'It\\'s my first post!',\n    likeCount: 24\n  }],\n  newPostText: '',\n  profile: null,\n  status: ''\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return {\n          ...state,\n          posts: [...state.posts, {\n            id: 5,\n            massage: state.newPostText,\n            likeCount: 0\n          }],\n          newPostText: ''\n        };\n      }\n    case UPDATE_NEW_POST_TEXT:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addPostActionCreate = () => ({\n  type: ADD_POST\n});\nexport const setUsersProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUsersProfile = userId => dispatch => {\n  userAPI.getProfile(userId).then(data => {\n    dispatch(setUsersProfile(data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(data => {\n    dispatch(setStatus(data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  debugger;\n  profileAPI.updateStatus(status).then(data => {\n    debugger;\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport const updateNewPostTextActionCreate = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","userAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","massage","likeCount","newPostText","profile","status","profileReducer","state","action","type","newText","addPostActionCreate","setUsersProfile","setStatus","getUsersProfile","userId","dispatch","getProfile","then","data","getStatus","updateStatus","resultCode","updateNewPostTextActionCreate","text"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, massage: 'Hi, how are you?', likeCount: 0},\r\n        {id: 2, massage: 'It\\'s my first post!', likeCount: 24},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, massage: state.newPostText, likeCount: 0,}],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreate = () => ({type: ADD_POST,})\r\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUsersProfile = (userId) => (dispatch) => {\r\n    userAPI.getProfile(userId)\r\n        .then(data => {\r\n            dispatch(setUsersProfile(data));\r\n        })\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(data => {\r\n            dispatch(setStatus(data));\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    debugger\r\n    profileAPI.updateStatus(status)\r\n        .then(data => {\r\n            debugger\r\n            if(data.resultCode === 0){\r\n                dispatch(setStatus(status));\r\n            }\r\n        })\r\n}\r\n\r\nexport const updateNewPostTextActionCreate = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text,\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}