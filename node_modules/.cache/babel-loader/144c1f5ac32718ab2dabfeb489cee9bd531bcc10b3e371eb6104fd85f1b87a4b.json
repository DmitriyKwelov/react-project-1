{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwell\\\\Documents\\\\GitHub\\\\react-project-1\\\\src\\\\componnents\\\\Users\\\\UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { follow, getUsers, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingProgress, toggleIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from '../common/Preloader/Preloader';\nimport { userAPI } from \"../../api/api\";\nimport { compose } from \"redux\";\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from \"../../redux/users-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n  componentDidMount() {\n    this.props.reUsers(this.props.currentPage, this.props.pageSize);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}*/\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  getUsers\n}))(UsersContainer);","map":{"version":3,"names":["connect","follow","getUsers","setCurrentPage","setTotalUsersCount","setUsers","toggleFollowingProgress","toggleIsFetching","unfollow","React","Users","Preloader","userAPI","compose","withAuthRedirect","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","reUsers","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/componnents/Users/UsersContainer.jsx"],"sourcesContent":["import {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers, toggleFollowingProgress,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {userAPI} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.reUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingInProgress={this.props.followingInProgress}\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount,\r\n        toggleIsFetching, toggleFollowingProgress, getUsers\r\n    })\r\n)(UsersContainer);"],"mappings":";AAAA,SAAQA,OAAO,QAAO,aAAa;AACnC,SACIC,MAAM,EAAEC,QAAQ,EAChBC,cAAc,EACdC,kBAAkB,EAClBC,QAAQ,EAAEC,uBAAuB,EACjCC,gBAAgB,EAChBC,QAAQ,QACL,2BAA2B;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,+BAA+B;AACrD,SAAQC,OAAO,QAAO,eAAe;AACrC,SAAQC,OAAO,QAAO,OAAO;AAC7B,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SACIC,cAAc,EACdC,sBAAsB,EACtBC,aAAa,EACbC,WAAW,EACXC,kBAAkB,QACf,6BAA6B;AAAC;AAAA;AAErC,MAAMC,cAAc,SAASX,KAAK,CAACY,SAAS,CAAC;EAAA;IAAA;IAAA,KAMzCC,aAAa,GAAIC,UAAU,IAAK;MAC5B,IAAI,CAACC,KAAK,CAACtB,QAAQ,CAACqB,UAAU,EAAE,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC;IACxD,CAAC;EAAA;EANDC,iBAAiB,GAAG;IAChB,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,IAAI,CAACH,KAAK,CAACI,WAAW,EAAE,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAAC;EACnE;EAMAI,MAAM,GAAG;IACL,oBACI;MAAA,WACK,IAAI,CAACL,KAAK,CAACM,UAAU,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAE,GAAG,IAAI,eAC5C,QAAC,KAAK;QAAC,eAAe,EAAE,IAAI,CAACN,KAAK,CAACO,eAAgB;QAC5C,QAAQ,EAAE,IAAI,CAACP,KAAK,CAACC,QAAS;QAC9B,WAAW,EAAE,IAAI,CAACD,KAAK,CAACI,WAAY;QACpC,aAAa,EAAE,IAAI,CAACN,aAAc;QAClC,KAAK,EAAE,IAAI,CAACE,KAAK,CAACQ,KAAM;QACxB,MAAM,EAAE,IAAI,CAACR,KAAK,CAACvB,MAAO;QAC1B,QAAQ,EAAE,IAAI,CAACuB,KAAK,CAAChB,QAAS;QAC9B,mBAAmB,EAAE,IAAI,CAACgB,KAAK,CAACS;MAAoB;QAAA;QAAA;QAAA;MAAA,QAEzD;IAAA,gBACH;EAEX;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHH,KAAK,EAAE9B,QAAQ,CAACiC,KAAK,CAAC;IACtBV,QAAQ,EAAEP,WAAW,CAACiB,KAAK,CAAC;IAC5BJ,eAAe,EAAEZ,kBAAkB,CAACgB,KAAK,CAAC;IAC1CP,WAAW,EAAEb,cAAc,CAACoB,KAAK,CAAC;IAClCL,UAAU,EAAEb,aAAa,CAACkB,KAAK,CAAC;IAChCF,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAK;EACrD,CAAC;AACL,CAAC;AAED,eAAetB,OAAO,CAClBC,gBAAgB,EAChBd,OAAO,CAACkC,eAAe,EAAE;EACrBjC,MAAM;EAAEO,QAAQ;EAAEH,QAAQ;EAAEF,cAAc;EAAEC,kBAAkB;EAC9DG,gBAAgB;EAAED,uBAAuB;EAAEJ;AAC/C,CAAC,CAAC,CACL,CAACkB,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}