{"ast":null,"code":"import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n};\nexport const login = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    } else {\n      let action = stopSubmit(\"login\", {\n        email: \"Email is wrong\"\n      });\n      dispatch(action);\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","then","data","resultCode","id","password","rememberMe","response","logout"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/auth-reducer.js"],"sourcesContent":["import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return  {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth} });\r\n\r\nexport const getAuthUserData = () => (dispatch) =>{\r\n    authAPI.me()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n}\r\nexport const login = (email, password, rememberMe) => (dispatch) =>{\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let action = stopSubmit(\"login\", {email: \"Email is wrong\"});\r\n                dispatch(action)\r\n            }\r\n        })\r\n}\r\nexport const logout = () => (dispatch) =>{\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAClC,SAAQC,UAAU,QAAO,YAAY;AAErC,MAAMC,aAAa,GAAG,eAAe;AAErC,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,aAAa;MACd,OAAQ;QACJ,GAAGO,KAAK;QACR,GAAGC,MAAM,CAACE;MACd,CAAC;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,MAAM;EAACI,IAAI,EAAET,aAAa;EAAEU,OAAO,EACvF;IAACR,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAM;AAAE,CAAC,CAAC;AAEzC,OAAO,MAAMO,eAAe,GAAG,MAAOC,QAAQ,IAAI;EAC9Cf,OAAO,CAACgB,EAAE,EAAE,CACPC,IAAI,CAACC,IAAI,IAAI;IACV,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;MACvB,IAAI;QAACC,EAAE;QAAEd,KAAK;QAAED;MAAK,CAAC,GAAGa,IAAI,CAACA,IAAI;MAClCH,QAAQ,CAACF,eAAe,CAACO,EAAE,EAAEf,KAAK,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;IACrD;EACJ,CAAC,CAAC;AACV,CAAC;AACD,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAK,EAAEgB,QAAQ,EAAEC,UAAU,KAAMP,QAAQ,IAAI;EAC/Df,OAAO,CAACM,KAAK,CAACD,KAAK,EAAEgB,QAAQ,EAAEC,UAAU,CAAC,CACrCL,IAAI,CAACM,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACL,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;MAChCJ,QAAQ,CAACD,eAAe,EAAE,CAAC;IAC/B,CAAC,MAAM;MACH,IAAIJ,MAAM,GAAGT,UAAU,CAAC,OAAO,EAAE;QAACI,KAAK,EAAE;MAAgB,CAAC,CAAC;MAC3DU,QAAQ,CAACL,MAAM,CAAC;IACpB;EACJ,CAAC,CAAC;AACV,CAAC;AACD,OAAO,MAAMc,MAAM,GAAG,MAAOT,QAAQ,IAAI;EACrCf,OAAO,CAACwB,MAAM,EAAE,CACXP,IAAI,CAACM,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACL,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;MAChCJ,QAAQ,CAACF,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtD;EACJ,CAAC,CAAC;AACV,CAAC;AAED,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}