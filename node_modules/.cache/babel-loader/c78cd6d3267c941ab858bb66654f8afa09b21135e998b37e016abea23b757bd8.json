{"ast":null,"code":"import { profileAPI, userAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    massage: 'Hi, how are you?',\n    likeCount: 0\n  }, {\n    id: 2,\n    massage: 'It\\'s my first post!',\n    likeCount: 24\n  }],\n  profile: null,\n  status: ''\n};\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return {\n          ...state,\n          posts: [...state.posts, {\n            id: 5,\n            massage: action.newPostText,\n            likeCount: 0\n          }],\n          newPostText: ''\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    case DELETE_POST:\n      {\n        return {\n          ...state,\n          posts: state.posts.filter(p => p.id != action.PostId)\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addPostActionCreate = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUsersProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const deletePost = PostId => ({\n  type: DELETE_POST,\n  PostId\n});\nexport const getUsersProfile = userId => async dispatch => {\n  let response = await userAPI.getProfile(userId);\n  dispatch(setUsersProfile(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(data => {\n    dispatch(setStatus(data));\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","userAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","massage","likeCount","profile","status","profileReducer","state","action","type","newPostText","filter","p","PostId","addPostActionCreate","setUsersProfile","setStatus","deletePost","getUsersProfile","userId","dispatch","response","getProfile","data","updateStatus","then","resultCode","getStatus"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI, userAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, massage: 'Hi, how are you?', likeCount: 0},\r\n        {id: 2, massage: 'It\\'s my first post!', likeCount: 24},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, massage: action.newPostText, likeCount: 0,}],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.PostId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreate = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUsersProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (PostId) => ({type: DELETE_POST, PostId})\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let response = await userAPI.getProfile(userId)\r\n            dispatch(setUsersProfile(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n        .then(data => {\r\n            if(data.resultCode === 0){\r\n                dispatch(setStatus(status));\r\n            }\r\n        })\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(data => {\r\n            dispatch(setStatus(data));\r\n        })\r\n}\r\n\r\nexport default profileReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}