{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kwell\\\\Documents\\\\GitHub\\\\react-project-1\\\\src\\\\componnents\\\\Users\\\\UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from '../common/Preloader/Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n      withCredentials: true\n    }).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nconst UserContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);\nexport default UserContainer;","map":{"version":3,"names":["connect","follow","setCurrentPage","setTotalUsersCount","setUsers","toggleIsFetching","unfollow","React","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","componentDidMount","currentPage","withCredentials","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","UserContainer"],"sources":["C:/Users/Kwell/Documents/GitHub/react-project-1/src/componnents/Users/UsersContainer.jsx"],"sourcesContent":["import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from '../common/Preloader/Preloader'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\r\n            withCredentials: true,\r\n        })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                    <Users totalUsersCount={this.props.totalUsersCount}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.props.currentPage}\r\n                           onPageChanged={this.onPageChanged}\r\n                           users={this.props.users}\r\n                           follow={this.props.follow}\r\n                           unfollow={this.props.unfollow}\r\n\r\n                    />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nconst UserContainer = connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersContainer)\r\nexport default UserContainer;"],"mappings":";AAAA,SAAQA,OAAO,QAAO,aAAa;AACnC,SACIC,MAAM,EACNC,cAAc,EACdC,kBAAkB,EAClBC,QAAQ,EACRC,gBAAgB,EAChBC,QAAQ,QACL,2BAA2B;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,+BAA+B;AAAA;AAAA;AAErD,MAAMC,cAAc,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAA;IAAA;IAAA,KAczCC,aAAa,GAAIC,UAAU,IAAK;MAC5B,IAAI,CAACC,KAAK,CAACb,cAAc,CAACY,UAAU,CAAC;MACrC,IAAI,CAACC,KAAK,CAACV,gBAAgB,CAAC,IAAI,CAAC;MACjCG,KAAK,CAACQ,GAAG,CAAE,2DAA0DF,UAAW,UAAS,IAAI,CAACC,KAAK,CAACE,QAAS,EAAC,CAAC,CAC1GC,IAAI,CAACC,QAAQ,IAAI;QACd,IAAI,CAACJ,KAAK,CAACV,gBAAgB,CAAC,KAAK,CAAC;QAClC,IAAI,CAACU,KAAK,CAACX,QAAQ,CAACe,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;MAC5C,CAAC,CAAC;IACV,CAAC;EAAA;EApBDC,iBAAiB,GAAG;IAChB,IAAI,CAACP,KAAK,CAACV,gBAAgB,CAAC,IAAI,CAAC;IACjCG,KAAK,CAACQ,GAAG,CAAE,2DAA0D,IAAI,CAACD,KAAK,CAACQ,WAAY,UAAS,IAAI,CAACR,KAAK,CAACE,QAAS,EAAC,EAAE;MACxHO,eAAe,EAAE;IACrB,CAAC,CAAC,CACGN,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACJ,KAAK,CAACV,gBAAgB,CAAC,KAAK,CAAC;MAClC,IAAI,CAACU,KAAK,CAACX,QAAQ,CAACe,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;MACxC,IAAI,CAACN,KAAK,CAACZ,kBAAkB,CAACgB,QAAQ,CAACC,IAAI,CAACK,UAAU,CAAC;IAC3D,CAAC,CAAC;EACV;EAYAC,MAAM,GAAG;IACL,oBACI;MAAA,WACK,IAAI,CAACX,KAAK,CAACY,UAAU,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAE,GAAG,IAAI,eACxC,QAAC,KAAK;QAAC,eAAe,EAAE,IAAI,CAACZ,KAAK,CAACa,eAAgB;QAC5C,QAAQ,EAAE,IAAI,CAACb,KAAK,CAACE,QAAS;QAC9B,WAAW,EAAE,IAAI,CAACF,KAAK,CAACQ,WAAY;QACpC,aAAa,EAAE,IAAI,CAACV,aAAc;QAClC,KAAK,EAAE,IAAI,CAACE,KAAK,CAACc,KAAM;QACxB,MAAM,EAAE,IAAI,CAACd,KAAK,CAACd,MAAO;QAC1B,QAAQ,EAAE,IAAI,CAACc,KAAK,CAACT;MAAS;QAAA;QAAA;QAAA;MAAA,QAEnC;IAAA,gBACP;EAEX;AACJ;AAEA,IAAIwB,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHF,KAAK,EAAEE,KAAK,CAACC,SAAS,CAACH,KAAK;IAC5BZ,QAAQ,EAAEc,KAAK,CAACC,SAAS,CAACf,QAAQ;IAClCW,eAAe,EAAEG,KAAK,CAACC,SAAS,CAACJ,eAAe;IAChDL,WAAW,EAAEQ,KAAK,CAACC,SAAS,CAACT,WAAW;IACxCI,UAAU,EAAEI,KAAK,CAACC,SAAS,CAACL;EAChC,CAAC;AACL,CAAC;AAED,MAAMM,aAAa,GAAGjC,OAAO,CAAC8B,eAAe,EAAE;EAAC7B,MAAM;EAAEK,QAAQ;EAAEF,QAAQ;EAAEF,cAAc;EAAEC,kBAAkB;EAAEE;AAAgB,CAAC,CAAC,CAACM,cAAc,CAAC;AAClJ,eAAesB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}